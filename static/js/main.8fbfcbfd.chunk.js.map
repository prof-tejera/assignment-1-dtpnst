{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/Panel.js","components/generic/TimeInput.js","components/generic/Duration.js","components/generic/DisplayTime.js","components/generic/DisplayRound.js","components/generic/Button.js","components/generic/Timer.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/generic/Input.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","react_default","a","createElement","DocumentComponent_Documentation","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Loading_templateObject","Dot","span","Loading_templateObject2","props","size","color","DotGroup","Loading_templateObject3","Loading","_ref$size","_ref$color","Loading_Container","DocumentationView_templateObject","DocumentationView_templateObject2","DocumentationView_Container","DocumentationView_Title","documentation_DocumentComponent","generic_Loading","Panel","children","TimeInput","label","duration","onTimeChange","handleInputChange","event","_event$target","target","name","value","numericValue","parseInt","objectSpread2","defineProperty","isNaN","min","max","hours","onChange","minutes","seconds","Duration","classCallCheck","this","formattedHours","String","Math","floor","padStart","formattedMinutes","formattedSeconds","concat","DisplayTime","className","style","border","width","height","textAlign","marginBottom","formatDuration","DisplayRound","Button","text","btnProps","objectWithoutProperties","_excluded","Timer","currentTime","currentRound","handleStartStopClick","handleResetClick","handleFastForwardClick","isRunning","generic_Panel","generic_DisplayTime","undefined","generic_DisplayRound","generic_Button","onClick","Stopwatch","_useState","useState","_useState2","slicedToArray","setCurrentTime","_useState3","_useState4","endTime","setEndTime","_useState5","_useState6","setIsRunning","useEffect","timerId","getTotalSeconds","setInterval","prevTime","clearInterval","generic_Timer","generic_TimeInput","newEndTime","Countdown","countdownAmount","setCoundownAmount","_useState7","_useState8","isPaused","setIsPaused","newCountdownAmount","Input","inputId","isRequired","Input_excluded","htmlFor","assign","id","required","XY","numRounds","setNumRounds","setCurrentRound","_useState9","_useState10","_useState11","_useState12","prevRound","generic_Input","newNumRounds","Tabata","workTime","setWorkTime","restTime","setRestTime","_useState13","_useState14","_useState15","_useState16","isRest","setIsRest","newWorkTime","newRestTime","Timers","TimersView_templateObject","TimersView_templateObject2","TimerTitle","TimersView_templateObject3","TimersView","timers","C","timers_Stopwatch","timers_Countdown","timers_XY","timers_Tabata","timer","TimersView_Timer","App_templateObject","Nav","dist","to","App","App_Container","App_Nav","react_router_dist","path","element","DocumentationView","views_TimersView","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8fbfcbfd.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\n\nconst Panel = (props) => {\n  return <div>{props.children}</div>;\n};\n\nexport default Panel;\n","import React from \"react\";\n\nconst TimeInput = ({ label, duration, onTimeChange }) => {\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        const numericValue = value === '' ? 0 : parseInt(value, 10);\n        onTimeChange({ ...duration, [name]: isNaN(numericValue) ? 0 : numericValue });\n    };\n  \n    return (\n      <div>\n        <label>{label}:</label>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"24\"\n          name=\"hours\"\n          value={duration.hours}\n          onChange={handleInputChange}\n        />\n        <span> hours</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          value={duration.minutes}\n          onChange={handleInputChange}\n        />\n        <span> minutes</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"seconds\"\n          value={duration.seconds}\n          onChange={handleInputChange}\n        />\n        <span> seconds</span>\n      </div>\n    );\n  };\n\n\nexport default TimeInput;","export default class Duration {\n    constructor(hours, minutes, seconds) {\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n    }\n\n    getTotalSeconds() {\n        return this.hours * 3600 + this.minutes * 60 + this.seconds;\n    }\n\n    formatDuration() {\n        const formattedHours = String(Math.floor(this.hours)).padStart(2, '0');\n        const formattedMinutes = String(Math.floor(this.minutes)).padStart(2, '0');\n        const formattedSeconds = String(Math.floor(this.seconds)).padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n      }\n}\n","import React from \"react\";\nimport Duration from \"../generic/Duration\";\n\nconst DisplayTime = ({ value }) => {\n    return (\n      <div\n        className=\"screen\"\n        style={{\n          border: \"1px solid black\",\n          width: 300,\n          height: 70,\n          textAlign: \"right\",\n          marginBottom: 10,\n        }}\n      >\n        {new Duration(value / 3600, (value % 3600) / 60, value % 60).formatDuration()}\n      </div>\n    );\n  };\n  \n  export default DisplayTime;\n  ","import React from \"react\";\n\nconst DisplayRound = ({ value }) => {\n    return (\n      <div\n        className=\"screen\"\n        style={{\n          border: \"1px solid black\",\n          width: 300,\n          height: 70,\n          textAlign: \"right\",\n          marginBottom: 10,\n        }}\n      >\n        {value}\n      </div>\n    );\n  };\n  \n  export default DisplayRound;\n  ","import React from \"react\";\n\nconst Button = ({text, ...btnProps }) => {\n    return (\n      <button\n        {...btnProps}\n      >\n        {text}\n      </button>\n    );\n  };\n  \n  export default Button;\n  ","import React from 'react';\nimport Panel from '../generic/Panel';\nimport DisplayTime from '../generic/DisplayTime';\nimport DisplayRound from '../generic/DisplayRound';\nimport Button from '../generic/Button';\n\nconst Timer = ({\n  currentTime,\n  currentRound,\n  handleStartStopClick,\n  handleResetClick,\n  handleFastForwardClick,\n  isRunning,\n}) => {\n  return (\n    <Panel>\n      <DisplayTime value={currentTime} />\n      {currentRound !== undefined && <DisplayRound value={currentRound} />}\n      <Button text={isRunning ? \"Stop\" : \"Start\"} onClick={handleStartStopClick} />\n      <Button text=\"Reset\" onClick={handleResetClick} />\n      <Button text=\"Fast Forward\" onClick={handleFastForwardClick} />\n    </Panel>\n  );\n};\n\nexport default Timer;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Timer from \"../generic/Timer\";\n\nconst Stopwatch = () => {\n\n    const [currentTime, setCurrentTime] = useState(0);\n    const [endTime, setEndTime] = useState(new Duration(0, 0, 0));\n    const [isRunning, setIsRunning] = useState(false);\n\n    const handleStartStopClick = () => {\n        setIsRunning(!isRunning);\n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(0);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(endTime.getTotalSeconds());\n        setIsRunning(false);\n    }\n\n    const handleEndTimeChange = (newEndTime) => {\n        setEndTime(new Duration(newEndTime.hours, newEndTime.minutes, newEndTime.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime < endTime.getTotalSeconds()) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime + 1); \n            }, 1000);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n    \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, endTime]);\n    \n    \n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"End Time\" duration={endTime} onTimeChange={handleEndTimeChange} />   \n        </Panel>\n    );\n\n\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Timer from \"../generic/Timer\";\n\nconst Countdown = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false)\n\n    const handleStartStopClick = () => {\n        \n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(0);\n        setIsRunning(false);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1); \n                }, 1000);\n            } else {\n                setIsRunning(false); \n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime]);\n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Timer Amount\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n        </Panel>\n    );\n};\n\nexport default Countdown;\n","import React from \"react\";\n\nconst Input = ({label, type, inputId, isRequired, onChange, ...props}) => {\n    const handleInputChange = (event) => {\n        onChange(event.target.value);\n    }\n\n    return (\n        <div>\n        <label htmlFor={inputId} className={isRequired ? \"required\" : \"\"}>{label}</label>\n        <input \n            id={inputId}\n            type={type}\n            required={isRequired}\n            onChange={handleInputChange}\n            {...props}/>\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport Timer from \"../generic/Timer\";\n\nconst XY = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1);\n                }, 1000);\n            } else if (currentRound < numRounds) {\n                setCurrentTime(countdownAmount.getTotalSeconds());\n                setCurrentRound((currentRound) => currentRound + 1);\n            } else {\n                setIsRunning(false);\n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime, countdownAmount, currentRound, numRounds]);\n\n    return (\n        <Panel>\n            <Timer \n                currentTime={currentTime}\n                currentRound={currentRound}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Time Per Round\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n            <Input label=\"Number of Rounds\" type=\"number\" min=\"0\"  onChange={handleNumRoundsChange}/>  \n        </Panel>\n    );\n};\n\nexport default XY;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport Timer from \"../generic/Timer\";\n\nconst Tabata = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [workTime, setWorkTime] = useState(new Duration(0, 0, 0)); \n    const [restTime, setRestTime] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n    const [isRest, setIsRest] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(workTime.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleWorkTimeChange = (newWorkTime) => {\n        setWorkTime(new Duration(newWorkTime.hours, newWorkTime.minutes, newWorkTime.seconds));\n    };\n\n    const handleRestTimeChange = (newRestTime) => {\n        setRestTime(new Duration(newRestTime.hours, newRestTime.minutes, newRestTime.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime > 0) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime - 1);\n            }, 1000);\n          } else if (currentRound < numRounds) {\n            if (isRest) {\n              setCurrentTime(workTime.getTotalSeconds());\n              setCurrentRound((currentRound) => currentRound + 1);\n              setIsRest(false);\n            } else {\n              setCurrentTime(restTime.getTotalSeconds());\n              setIsRest(true);\n            }\n          } else if (currentRound === numRounds && !isRest) {\n            setCurrentTime(restTime.getTotalSeconds());\n            setIsRest(true);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n      \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, workTime, restTime, currentRound, numRounds, isRest]);\n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                currentRound={currentRound}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Work Time\" duration={workTime} onTimeChange={handleWorkTimeChange} />\n            <TimeInput label=\"Rest Time\" duration={restTime} onTimeChange={handleRestTimeChange} />\n            <Input label=\"Number of Rounds\" type=\"number\" min=\"0\" onChange={handleNumRoundsChange}/>\n        </Panel>\n    );\n};\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimerTitle = styled.div``;\n\nconst TimersView = () => {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer key={`timer-${timer.title}`}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n};\n\nexport default TimersView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Nav />\n        <Routes>\n          <Route path=\"/docs\" element={<DocumentationView />} />\n          <Route path=\"/\" element={<TimersView />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}