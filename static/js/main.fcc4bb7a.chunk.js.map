{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/Panel.js","components/generic/Duration.js","components/generic/DisplayTime.js","components/generic/TimeInput.js","components/generic/Button.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/generic/Input.js","components/generic/DisplayRounds.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","react_default","a","createElement","DocumentComponent_Documentation","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Loading_templateObject","Dot","span","Loading_templateObject2","props","size","color","DotGroup","Loading_templateObject3","Loading","_ref$size","_ref$color","Loading_Container","DocumentationView_templateObject","DocumentationView_templateObject2","DocumentationView_Container","DocumentationView_Title","documentation_DocumentComponent","generic_Loading","Panel","children","Duration","hours","minutes","seconds","classCallCheck","this","formattedHours","String","Math","floor","padStart","formattedMinutes","formattedSeconds","concat","DisplayTime","value","className","style","border","width","height","textAlign","marginBottom","formatDuration","TimeInput","label","duration","onTimeChange","handleInputChange","event","_event$target","target","name","numericValue","parseInt","objectSpread2","defineProperty","isNaN","min","max","onChange","Button","text","btnProps","objectWithoutProperties","_excluded","Stopwatch","_useState","useState","_useState2","slicedToArray","currentTime","setCurrentTime","_useState3","_useState4","endTime","setEndTime","_useState5","_useState6","isRunning","setIsRunning","useEffect","timerId","getTotalSeconds","setInterval","prevTime","clearInterval","generic_Panel","generic_DisplayTime","generic_TimeInput","newEndTime","generic_Button","onClick","Countdown","countdownAmount","setCoundownAmount","_useState7","_useState8","isPaused","setIsPaused","newCountdownAmount","Input","inputId","isRequired","Input_excluded","htmlFor","assign","id","required","DisplayRounds","XY","numRounds","setNumRounds","currentRound","setCurrentRound","_useState9","_useState10","_useState11","_useState12","generic_DisplayRounds","generic_Input","newNumRounds","prevRound","Tabata","workTime","setWorkTime","restTime","setRestTime","_useState13","_useState14","_useState15","_useState16","isRest","setIsRest","newWorkTime","newRestTime","Timers","TimersView_templateObject","Timer","TimersView_templateObject2","TimerTitle","TimersView_templateObject3","TimersView","timers","C","timers_Stopwatch","timers_Countdown","timers_XY","timers_Tabata","timer","App_templateObject","Nav","dist","to","App","App_Container","App_Nav","react_router_dist","path","element","DocumentationView","views_TimersView","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fcc4bb7a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\n\nconst Panel = (props) => {\n  return <div>{props.children}</div>;\n};\n\nexport default Panel;\n","export default class Duration {\n    constructor(hours, minutes, seconds) {\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n    }\n\n    getTotalSeconds() {\n        return this.hours * 3600 + this.minutes * 60 + this.seconds;\n    }\n\n    formatDuration() {\n        const formattedHours = String(Math.floor(this.hours)).padStart(2, '0');\n        const formattedMinutes = String(Math.floor(this.minutes)).padStart(2, '0');\n        const formattedSeconds = String(Math.floor(this.seconds)).padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n      }\n}\n","import React from \"react\";\nimport Duration from \"../generic/Duration\";\n\nconst DisplayTime = ({ value }) => {\n    return (\n      <div\n        className=\"screen\"\n        style={{\n          border: \"1px solid black\",\n          width: 300,\n          height: 70,\n          textAlign: \"right\",\n          marginBottom: 10,\n        }}\n      >\n        {new Duration(value / 3600, (value % 3600) / 60, value % 60).formatDuration()}\n      </div>\n    );\n  };\n  \n  export default DisplayTime;\n  ","import React from \"react\";\n\nconst TimeInput = ({ label, duration, onTimeChange }) => {\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        const numericValue = value === '' ? 0 : parseInt(value, 10);\n        onTimeChange({ ...duration, [name]: isNaN(numericValue) ? 0 : numericValue });\n    };\n  \n    return (\n      <div>\n        <label>{label}:</label>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"24\"\n          name=\"hours\"\n          value={duration.hours}\n          onChange={handleInputChange}\n        />\n        <span> hours</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          value={duration.minutes}\n          onChange={handleInputChange}\n        />\n        <span> minutes</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"seconds\"\n          value={duration.seconds}\n          onChange={handleInputChange}\n        />\n        <span> seconds</span>\n      </div>\n    );\n  };\n\n\nexport default TimeInput;","import React from \"react\";\n\nconst Button = ({text, ...btnProps }) => {\n    return (\n      <button\n        {...btnProps}\n      >\n        {text}\n      </button>\n    );\n  };\n  \n  export default Button;\n  ","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Button from \"../generic/Button\";\nimport Duration from \"../generic/Duration\";\n\nconst Stopwatch = () => {\n\n    const [currentTime, setCurrentTime] = useState(0);\n    const [endTime, setEndTime] = useState(new Duration(0, 0, 0));\n    const [isRunning, setIsRunning] = useState(false);\n\n    const handleStartStopClick = () => {\n        setIsRunning(!isRunning);\n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(0);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(endTime.getTotalSeconds());\n        setIsRunning(false);\n    }\n\n    const handleEndTimeChange = (newEndTime) => {\n        setEndTime(new Duration(newEndTime.hours, newEndTime.minutes, newEndTime.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime < endTime.getTotalSeconds()) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime + 1); \n            }, 1000);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n    \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, endTime]);\n    \n    \n\n    return (\n        <Panel>\n            <DisplayTime value={currentTime}/>\n            <TimeInput label=\"End Time\" duration={endTime} onTimeChange={handleEndTimeChange} />\n            <br/>\n            <Button text={isRunning ? \"Stop\" : \"Start\"} onClick={handleStartStopClick} />\n            <Button text=\"Reset\" onClick={handleResetClick}/>\n            <Button text=\"Fast Forward\" onClick={handleFastForwardClick}/>   \n        </Panel>\n    );\n\n\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Button from \"../generic/Button\";\nimport Duration from \"../generic/Duration\";\n\nconst Countdown = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false)\n\n    const handleStartStopClick = () => {\n        \n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(0);\n        setIsRunning(false);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1); \n                }, 1000);\n            } else {\n                setIsRunning(false); \n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime]);\n\n    return (\n        <Panel>\n            <DisplayTime value={currentTime}/>\n            <TimeInput label=\"Timer Amount\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n            <br/>\n            <Button text={isRunning ? \"Stop\" : \"Start\"} onClick={handleStartStopClick} />\n            <Button text=\"Reset\" onClick={handleResetClick}/>\n            <Button text=\"Fast Forward\" onClick={handleFastForwardClick}/>   \n        </Panel>\n    );\n};\n\nexport default Countdown;\n","import React from \"react\";\n\nconst Input = ({label, type, inputId, isRequired, onChange, ...props}) => {\n    const handleInputChange = (event) => {\n        onChange(event.target.value);\n    }\n\n    return (\n        <div>\n        <label htmlFor={inputId} className={isRequired ? \"required\" : \"\"}>{label}</label>\n        <input \n            id={inputId}\n            type={type}\n            required={isRequired}\n            onChange={handleInputChange}\n            {...props}/>\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst DisplayRounds = ({ value }) => {\n    return (\n      <div\n        className=\"screen\"\n        style={{\n          border: \"1px solid black\",\n          width: 300,\n          height: 70,\n          textAlign: \"right\",\n          marginBottom: 10,\n        }}\n      >\n        {value}\n      </div>\n    );\n  };\n  \n  export default DisplayRounds;\n  ","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Button from \"../generic/Button\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\n\nconst XY = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1);\n                }, 1000);\n            } else if (currentRound < numRounds) {\n                setCurrentTime(countdownAmount.getTotalSeconds());\n                setCurrentRound((currentRound) => currentRound + 1);\n            } else {\n                setIsRunning(false);\n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime, countdownAmount, currentRound, numRounds]);\n\n    return (\n        <Panel>\n            <DisplayTime value={currentTime}/>\n            <DisplayRounds value={currentRound}/>\n            <TimeInput label=\"Time Per Round\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n            <Input label=\"Number of Rounds\" type=\"number\" min=\"0\"  onChange={handleNumRoundsChange}/>\n            <br/>\n            <Button text={isRunning ? \"Stop\" : \"Start\"} onClick={handleStartStopClick} />\n            <Button text=\"Reset\" onClick={handleResetClick}/>\n            <Button text=\"Fast Forward\" onClick={handleFastForwardClick}/>   \n        </Panel>\n    );\n};\n\nexport default XY;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Button from \"../generic/Button\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\n\nconst Tabata = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [workTime, setWorkTime] = useState(new Duration(0, 0, 0)); \n    const [restTime, setRestTime] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n    const [isRest, setIsRest] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(workTime.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleWorkTimeChange = (newWorkTime) => {\n        setWorkTime(new Duration(newWorkTime.hours, newWorkTime.minutes, newWorkTime.seconds));\n    };\n\n    const handleRestTimeChange = (newRestTime) => {\n        setRestTime(new Duration(newRestTime.hours, newRestTime.minutes, newRestTime.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime > 0) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime - 1);\n            }, 1000);\n          } else if (currentRound < numRounds) {\n            if (isRest) {\n              setCurrentTime(workTime.getTotalSeconds());\n              setCurrentRound((currentRound) => currentRound + 1);\n              setIsRest(false);\n            } else {\n              setCurrentTime(restTime.getTotalSeconds());\n              setIsRest(true);\n            }\n          } else if (currentRound === numRounds && !isRest) {\n            setCurrentTime(restTime.getTotalSeconds());\n            setIsRest(true);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n      \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, workTime, restTime, currentRound, numRounds, isRest]);\n\n    return (\n        <Panel>\n            <DisplayTime value={currentTime}/>\n            <DisplayRounds value={currentRound}/>\n            <TimeInput label=\"Work Time\" duration={workTime} onTimeChange={handleWorkTimeChange} />\n            <TimeInput label=\"Rest Time\" duration={restTime} onTimeChange={handleRestTimeChange} />\n            <Input label=\"Number of Rounds\" type=\"number\" min=\"0\" onChange={handleNumRoundsChange}/>\n            <br/>\n            <Button text={isRunning ? \"Stop\" : \"Start\"} onClick={handleStartStopClick} />\n            <Button text=\"Reset\" onClick={handleResetClick}/>\n            <Button text=\"Fast Forward\" onClick={handleFastForwardClick}/>   \n        </Panel>\n    );\n};\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimerTitle = styled.div``;\n\nconst TimersView = () => {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer key={`timer-${timer.title}`}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n};\n\nexport default TimersView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Nav />\n        <Routes>\n          <Route path=\"/docs\" element={<DocumentationView />} />\n          <Route path=\"/\" element={<TimersView />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}