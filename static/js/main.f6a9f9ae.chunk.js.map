{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/Panel.js","components/generic/TimeInput.js","components/generic/Duration.js","components/generic/DisplayTime.js","components/generic/DisplayRound.js","components/generic/Timer.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/generic/Input.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","react_default","a","createElement","DocumentComponent_Documentation","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Loading_templateObject","Dot","span","Loading_templateObject2","props","size","color","DotGroup","Loading_templateObject3","Loading","_ref$size","_ref$color","Loading_Container","DocumentationView_templateObject","DocumentationView_templateObject2","DocumentationView_Container","DocumentationView_Title","documentation_DocumentComponent","generic_Loading","Panel","children","TimeInput","label","duration","onTimeChange","handleInputChange","event","_event$target","target","name","value","numericValue","parseInt","objectSpread2","defineProperty","isNaN","TimeInputContainer","TimeInput_templateObject","min","max","hours","onChange","minutes","seconds","Duration","classCallCheck","this","formattedHours","String","Math","floor","padStart","formattedMinutes","formattedSeconds","concat","DisplayTime","className","formatDuration","DisplayRound","buttonStyle","backgroundColor","borderRadius","padding","alignItems","justifyContent","cursor","boxShadow","border","borderStyle","borderColor","resetButtonStyle","ButtonContainer","Timer_templateObject","TimerContainer","Timer_templateObject2","Timer","currentTime","currentRound","handleStartStopClick","handleResetClick","handleFastForwardClick","isRunning","generic_Panel","generic_DisplayTime","index_es","icon","faPause","faPlay","style","onClick","faRotateLeft","faForward","undefined","generic_DisplayRound","Stopwatch","_useState","useState","_useState2","slicedToArray","setCurrentTime","_useState3","_useState4","endTime","setEndTime","_useState5","_useState6","setIsRunning","useEffect","timerId","getTotalSeconds","setInterval","prevTime","clearInterval","generic_Timer","generic_TimeInput","newEndTime","Countdown","countdownAmount","setCoundownAmount","_useState7","_useState8","isPaused","setIsPaused","newCountdownAmount","Input","inputId","isRequired","objectWithoutProperties","_excluded","fontSize","paddingRight","fontWeight","htmlFor","assign","width","fontFamily","id","required","XY","numRounds","setNumRounds","setCurrentRound","_useState9","_useState10","_useState11","_useState12","prevRound","generic_Input","newNumRounds","Tabata","workTime","setWorkTime","restTime","setRestTime","_useState13","_useState14","_useState15","_useState16","isRest","setIsRest","newWorkTime","newRestTime","Timers","TimersView_templateObject","TimersView_templateObject2","TimerTitle","TimersView_templateObject3","TimersView","timers","C","timers_Stopwatch","timers_Countdown","timers_XY","timers_Tabata","timer","TimersView_Timer","App_templateObject","Nav","dist","to","App","App_Container","App_Nav","react_router_dist","path","element","DocumentationView","views_TimersView","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f6a9f9ae.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\n\nconst Panel = (props) => {\n  return <div>{props.children}</div>;\n};\n\nexport default Panel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TimeInput = ({ label, duration, onTimeChange }) => {\n    \n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        const numericValue = value === '' ? 0 : parseInt(value, 10);\n        onTimeChange({ ...duration, [name]: isNaN(numericValue) ? 0 : numericValue });\n    };\n    \n    const TimeInputContainer = styled.div`\n      padding: 5px;\n      span {\n        font-size: 13px;\n        padding-right: 5px;\n        font-weight: bold;\n      }\n      input {\n        display: inline-block;\n        width: 3em;\n        background-color: #dcdedd;\n        font-family: 'Orbitron', sans-serif;\n        color: #4f635d;\n        border: 2px;\n        border-style: solid;\n        border-color: #848a88;\n        border-radius: 5px;\n      }\n      \n      label {\n        display: inline-block;\n        width: 6em;\n        font-weight: bold;\n        font-size: 10px;\n      }\n    `;\n\n\n    return (\n      <TimeInputContainer>\n        <span>{label}</span>\n        <label>\n            Hours\n            <input\n                type=\"number\"\n                min=\"0\"\n                max=\"24\"\n                name=\"hours\"\n                value={duration.hours}\n                onChange={handleInputChange}\n                />\n        </label>\n        \n        <label>\n            Minutes\n    \n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          value={duration.minutes}\n          onChange={handleInputChange}\n        />\n        </label>\n        <label>\n            Seconds\n            <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"seconds\"\n          value={duration.seconds}\n          onChange={handleInputChange}\n        />\n        </label>\n       \n        \n      </TimeInputContainer>\n    );\n  };\n\n\nexport default TimeInput;","export default class Duration {\n    constructor(hours, minutes, seconds) {\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n    }\n\n    getTotalSeconds() {\n        return this.hours * 3600 + this.minutes * 60 + this.seconds;\n    }\n\n    formatDuration() {\n        const formattedHours = String(Math.floor(this.hours)).padStart(2, '0');\n        const formattedMinutes = String(Math.floor(this.minutes)).padStart(2, '0');\n        const formattedSeconds = String(Math.floor(this.seconds)).padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n      }\n}\n","import React from \"react\";\nimport Duration from \"../generic/Duration\";\n\nconst DisplayTime = ({ value }) => {\n    return (\n      <div className=\"display\">\n        {new Duration(value / 3600, (value % 3600) / 60, value % 60).formatDuration()}\n      </div>\n    );\n  };\n  \n  export default DisplayTime;\n  ","import React from \"react\";\n\nconst DisplayRound = ({ value }) => {\n    return (\n      <div className=\"round\">\n        Round: {value}\n      </div>\n    );\n  };\n  \n  export default DisplayRound;\n  ","import React from 'react';\nimport Panel from '../generic/Panel';\nimport DisplayTime from '../generic/DisplayTime';\nimport DisplayRound from '../generic/DisplayRound';\nimport styled from \"styled-components\";\n\n\n//icons imported following this answer: https://stackoverflow.com/questions/69559558/how-do-i-use-font-awesome-icon-in-react\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faRotateLeft, faForward } from '@fortawesome/free-solid-svg-icons';\n\n// style inspiration came from this image: https://www.istockphoto.com/vector/digital-stopwatch-icon-on-transparent-background-gm1284117436-381353450\n\n\nconst buttonStyle = {\n    backgroundColor: \"#fcba03\",\n    color: \"white\",\n    borderRadius: \"8px\",\n    padding: \"5px 10px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    boxShadow: \"2px 2px 2px rgba(0, 0, 0, 0.3)\",\n    border: \"5px\",\n    borderStyle: \"solid\",\n    borderColor: \"#bf8f0a\",\n  };\n\nconst resetButtonStyle = {\n    backgroundColor: \"#d9311e\",\n    color: \"white\",\n    borderRadius: \"8px\",\n    padding: \"5px 10px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    boxShadow: \"2px 2px 2px rgba(0, 0, 0, 0.3)\",\n    border: \"5px\",\n    borderStyle: \"solid\",\n    borderColor: \"#ba3425\",\n};\n\nconst ButtonContainer = styled.div`\n    padding-left: 16px;\n`;\n\nconst TimerContainer = styled.div`\n    background-color: #4f635d;\n    width: 175px;\n    padding: 20px;\n    padding-bottom: 50px;\n    border: 20px;\n    border-style: solid;\n    border-color: #fcba03;\n    border-top-right-radius: 30px;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 100px;\n    border-bottom-right-radius: 100px;\n`;\n\nconst Timer = ({\n  currentTime,\n  currentRound,\n  handleStartStopClick,\n  handleResetClick,\n  handleFastForwardClick,\n  isRunning,\n}) => {\n  return (\n    <Panel>\n        <TimerContainer>\n            <DisplayTime value={currentTime} />\n            <ButtonContainer>\n                <FontAwesomeIcon icon={isRunning ? faPause : faPlay} style={buttonStyle} onClick={handleStartStopClick}/>\n                <FontAwesomeIcon icon={faRotateLeft} style={resetButtonStyle} onClick={handleResetClick}/>\n                <FontAwesomeIcon icon={faForward} style={buttonStyle} onClick={handleFastForwardClick} />\n            </ButtonContainer>\n        </TimerContainer>\n        {currentRound !== undefined && <DisplayRound value={currentRound} />}\n    </Panel>\n  );\n};\n\nexport default Timer;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Timer from \"../generic/Timer\";\n\nconst Stopwatch = () => {\n\n    const [currentTime, setCurrentTime] = useState(0);\n    const [endTime, setEndTime] = useState(new Duration(0, 0, 0));\n    const [isRunning, setIsRunning] = useState(false);\n\n    const handleStartStopClick = () => {\n        setIsRunning(!isRunning);\n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(0);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(endTime.getTotalSeconds());\n        setIsRunning(false);\n    }\n\n    const handleEndTimeChange = (newEndTime) => {\n        setEndTime(new Duration(newEndTime.hours, newEndTime.minutes, newEndTime.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime < endTime.getTotalSeconds()) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime + 1); \n            }, 1000);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n    \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, endTime]);\n    \n    \n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Time\" duration={endTime} onTimeChange={handleEndTimeChange} />   \n        </Panel>\n    );\n\n\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Timer from \"../generic/Timer\";\n\nconst Countdown = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false)\n\n    const handleStartStopClick = () => {\n        \n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(0);\n        setIsRunning(false);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1); \n                }, 1000);\n            } else {\n                setIsRunning(false); \n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime]);\n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Time\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n        </Panel>\n    );\n};\n\nexport default Countdown;\n","import React from \"react\";\n\nconst Input = ({label, type, inputId, isRequired, onChange, ...props}) => {\n    const handleInputChange = (event) => {\n        onChange(event.target.value);\n    }\n\n    const labelStyle = {\n        fontSize: \"13px\",\n        paddingRight: \"5px\",\n        fontWeight: \"bold\",\n    };\n\n    const inputStyle = {\n        width: \"50px\",\n        backgroundColor: \"#dcdedd\",\n        fontFamily: \"'Orbitron', sans-serif\",\n        color: \"#4f635d\",\n        border: \"2px\",\n        borderStyle: \"solid\",\n        borderColor: \"#848a88\",\n        borderRadius: \"5px\",\n    }\n\n    return (\n        <div>\n        <label style={labelStyle} htmlFor={inputId} className={isRequired ? \"required\" : \"\"}>{label}</label>\n        <input style={inputStyle}\n            id={inputId}\n            type={type}\n            required={isRequired}\n            onChange={handleInputChange}\n            {...props}/>\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport Timer from \"../generic/Timer\";\n\nconst XY = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [countdownAmount, setCoundownAmount] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(countdownAmount.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(countdownAmount.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleCountdownAmountChange = (newCountdownAmount) => {\n        setCoundownAmount(new Duration(newCountdownAmount.hours, newCountdownAmount.minutes, newCountdownAmount.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n            if (currentTime > 0) {\n                timerId = setInterval(() => {\n                    setCurrentTime((prevTime) => prevTime - 1);\n                }, 1000);\n            } else if (currentRound < numRounds) {\n                setCurrentTime(countdownAmount.getTotalSeconds());\n                setCurrentRound((currentRound) => currentRound + 1);\n            } else {\n                setIsRunning(false);\n            }\n        } else {\n            clearInterval(timerId);\n        }\n\n        return () => clearInterval(timerId);\n    }, [isRunning, currentTime, countdownAmount, currentRound, numRounds]);\n\n    return (\n        <Panel>\n            <Timer \n                currentTime={currentTime}\n                currentRound={currentRound}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Time Per Round\" duration={countdownAmount} onTimeChange={handleCountdownAmountChange} />\n            <Input label=\"# of Rounds\" type=\"number\" min=\"0\"  onChange={handleNumRoundsChange}/>  \n        </Panel>\n    );\n};\n\nexport default XY;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel\";\nimport TimeInput from \"../generic/TimeInput\";\nimport Duration from \"../generic/Duration\";\nimport Input from \"../generic/Input\";\nimport Timer from \"../generic/Timer\";\n\nconst Tabata = () => {\n    const [currentTime, setCurrentTime] = useState(0); \n    const [workTime, setWorkTime] = useState(new Duration(0, 0, 0)); \n    const [restTime, setRestTime] = useState(new Duration(0, 0, 0)); \n    const [numRounds, setNumRounds] = useState(0);\n    const [currentRound, setCurrentRound] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isPaused, setIsPaused] = useState(false);\n    const [isRest, setIsRest] = useState(false);\n\n    const handleStartStopClick = () => {\n        if(!isRunning && !isPaused) {\n            setCurrentTime(workTime.getTotalSeconds());\n            setCurrentRound(1);\n        }\n\n        if(isRunning) {\n            setIsPaused(true)\n        }\n        \n        setIsRunning(!isRunning);\n        \n    }\n\n    const handleResetClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound(1);\n    }\n\n    const handleFastForwardClick = () => {\n        setCurrentTime(workTime.getTotalSeconds());\n        setCurrentRound((prevRound) => prevRound +1);\n    }\n\n    const handleWorkTimeChange = (newWorkTime) => {\n        setWorkTime(new Duration(newWorkTime.hours, newWorkTime.minutes, newWorkTime.seconds));\n    };\n\n    const handleRestTimeChange = (newRestTime) => {\n        setRestTime(new Duration(newRestTime.hours, newRestTime.minutes, newRestTime.seconds));\n    };\n\n    const handleNumRoundsChange = (newNumRounds) => {\n        setNumRounds(newNumRounds)\n    }\n\n    useEffect(() => {\n        let timerId;\n        if (isRunning) {\n          if (currentTime > 0) {\n            timerId = setInterval(() => {\n              setCurrentTime((prevTime) => prevTime - 1);\n            }, 1000);\n          } else if (currentRound < numRounds) {\n            if (isRest) {\n              setCurrentTime(workTime.getTotalSeconds());\n              setCurrentRound((currentRound) => currentRound + 1);\n              setIsRest(false);\n            } else {\n              setCurrentTime(restTime.getTotalSeconds());\n              setIsRest(true);\n            }\n          } else if (currentRound === numRounds && !isRest) {\n            setCurrentTime(restTime.getTotalSeconds());\n            setIsRest(true);\n          } else {\n            setIsRunning(false);\n          }\n        } else {\n          clearInterval(timerId);\n        }\n      \n        return () => clearInterval(timerId);\n      }, [isRunning, currentTime, workTime, restTime, currentRound, numRounds, isRest]);\n\n    return (\n        <Panel>\n            <Timer\n                currentTime={currentTime}\n                currentRound={currentRound}\n                handleStartStopClick={handleStartStopClick}\n                handleResetClick={handleResetClick}\n                handleFastForwardClick={handleFastForwardClick}\n                isRunning={isRunning}\n            />\n            <TimeInput label=\"Work Time\" duration={workTime} onTimeChange={handleWorkTimeChange} />\n            <TimeInput label=\"Rest Time\" duration={restTime} onTimeChange={handleRestTimeChange} />\n            <Input label=\"# of Rounds\" type=\"number\" min=\"0\" onChange={handleNumRoundsChange}/>\n        </Panel>\n    );\n};\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimerTitle = styled.div``;\n\nconst TimersView = () => {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer key={`timer-${timer.title}`}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n};\n\nexport default TimersView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Nav />\n        <Routes>\n          <Route path=\"/docs\" element={<DocumentationView />} />\n          <Route path=\"/\" element={<TimersView />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}